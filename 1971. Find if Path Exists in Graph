class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        vector<vector<int>> adjList(n);

        for (const auto & edge: edges)
        {
            adjList[edge[0]].push_back(edge[1]);
            adjList[edge[1]].push_back(edge[0]);
        }

        vector<bool> visted(n, false);
        DFS(adjList, visted, source);

        return visted[destination];
    }

    void DFS(vector<vector<int>>& edges, vector<bool>& visted, int v)
    {
        visted[v] = true;

        for (int i: edges[v])
        {
            if (!visted[i]) DFS(edges, visted, i);
        }
    }
};
